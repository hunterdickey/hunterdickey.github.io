pums_hca_2019_1yr <- readRDS("a6_pums_hca.rds")
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
rm(list=ls())
library(tigris)
library(sf)
library(tidyverse)
library(dplyr)
library(mapview)
library(readxl)
library(spdep)
library(spatialreg)
library(survey)
rm(list=ls())
library(tigris)
library(sf)
library(tidyverse)
library(dplyr)
library(mapview)
library(readxl)
library(spdep)
library(spatialreg)
library(survey)
pums_hca_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP"
)
)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
pums_hca_2019_1yr <- readRDS("a6_pums_hca.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/hunterdickey.github.io")
setwd("~/Documents/GitHub/hunterdickey.github.io")
getwd()
setwd("~/Documents/GitHub/hunterdickey.github.io")
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(tidyverse)
library(tidyverse)
library(censusapi)
library(sf)
library(dplyr)
library(mapview)
library(tigris)
library(readxl)
library(spdep)
library(spatialreg)
library(survey)
library(leaflet)
pums_hca_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP"
)
)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_hca_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP"
)
)
saveRDS(pums_2019_1yr, "a6_pums_hca.rds")
pums_hca_2019_1yr <- readRDS("a6_pums_hca.rds")
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
View(sf_boundary)
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
pums_hca_2019_1yr <- readRDS("a6_pums.rds")
data <- sf_pums %>%
filter(PUMA %in% sf_pums$PUMA) %>%
mutate(
HINCP = as.numeric(HINCP),
TEN = factor(TEN),
MV = factor(MV)
) %>%
select(
HINCP,
TEN,
MV,
starts_with("WGTP")
) %>%
filter_all(all_vars(!is.na(.)))
class(data$WGTP)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[ ,5:84],
weights = ~as.numeric(WGTP)
)
data <- sf_pums %>%
filter(PUMA %in% sf_pums$PUMA) %>%
mutate(
HINCP = as.numeric(HINCP),
TEN = factor(TEN),
MV = factor(MV)
) %>%
select(
HINCP,
TEN,
MV,
starts_with("WGTP")
) %>%
filter_all(all_vars(!is.na(.)))
test <- data[ ,5:84]
test <- data[.,5:84]
test <- data[1:4,5:84]
test <- data[ ,5:84,]
test <- data[1,5:84,]
test <- data[1,5:84]
test <- data[data,1,5:84]
test <- data[ ,5:84]
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[c() ,5:84)],
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[c( , 5:84)],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[c(1:4, 5:84)],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[, 5:84],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[,5:84],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84,],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84,],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = c(data[5:84,], na.rm =TRUE)
weights = ~as.numeric(WGTP)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = c(data[5:84], na.rm =TRUE)
weights = ~as.numeric(WGTP)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = c(data[,5:84], na.rm =TRUE)
weights = ~as.numeric(WGTP)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = c(data[ ,5:84], na.rm =TRUE)
weights = ~as.numeric(WGTP)
repweights = c(data[ ,5:84, na.rm =TRUE)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = c(data[ ,5:84], na.rm =TRUE)
weights = ~as.numeric(WGTP)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = c(data[ ,5:84], na.rm =TRUE),
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[ , 5:84],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[, 5:84],
weights = ~as.numeric(WGTP)
)
repweights = data[, 5:84],
library(spdep)
library(spatialreg)
library(survey)
library(leaflet)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[, 5:84],
weights = ~as.numeric(WGTP)
)
View(data)
View(data)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[c("HINCP","TEN","MV","WGTP"), 5:84],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[c("HINCP","TEN","MV","WGTP"), 5:84,],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[c("HINCP","TEN","MV","WGTP"), 5:84, "HINCP"],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84, "HINCP"],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[ ,5:84],
weights = ~WGTP
)
repweights = data[ ,5:84],
repweights = data[ ,5:84]
repweights = data[ ,5:84],
repweights = data[ ,5:84]
repweights = data[ ,5:84,]
repweights = data[ ,5:84, ]
repweights = data[1, 5:84]
repweights = data["HINCP", 5:84]
repweights = data[5:84]
repweights = data[5:84,]
repweights = data[5:84, ]
test <- repweights = data[5:84, ]
test <- repweights = data[5:84, ]
View(repweights)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84, ],
weights = ~WGTP
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84, ],
weights = ~as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84, ],
weights = as.numeric(WGTP)
)
View(ca_pumas)
View(data)
data <- sf_pums %>%
filter(PUMA %in% sf_pums$PUMA) %>%
mutate(
HINCP = as.numeric(HINCP),
TEN = factor(TEN),
MV = factor(MV)
) %>%
select(
HINCP,
TEN,
MV,
starts_with("WGTP")
) %>%
filter_all(all_vars(!is.na(.)))
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84, ],
weights = as.numeric(WGTP)
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84, ],
weights = as.numeric(data$WGTP)
)
data$WGTPP <- as.numeric(data$WGTP)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[5:84, ],
weights = ~WGTPP
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[, 5:84],
weights = ~WGTP
)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[ , 5:84],
weights = ~WGTP
)
data$WGTP <- as.numeric(data$WGTP)
design <- svrepdesign(
data = data,
type = "ACS",
repweights = data[ , 5:84],
weights = ~WGTP
)
View(data)
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
saveRDS(pums_2019_1yr, "a6_pums_hca.rds")
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
data <- sf_pums %>%
filter(PUMA %in% sf_pums$PUMA) %>%
mutate(
HINCP = as.numeric(HINCP),
TEN = factor(TEN),
MV = factor(MV)
) %>%
select(
HINCP,
TEN,
MV,
starts_with("WGTP")
) %>%
filter_all(all_vars(!is.na(.)))
data <- sf_pums %>%
filter(PUMA %in% sf_pums$PUMA) %>%
mutate(
HINCP = as.numeric(HINCP),
TEN = factor(TEN),
MV = factor(MV)
) %>%
select(
HINCP,
TEN,
MV,
starts_with("WGTP")
) %>%
filter_all(all_vars(!is.na(.)))
View(data)
pums_hca_2019_1yr <- readRDS("a6_pums_hca.rds")
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
data <- pums_hca_2019_1yr %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
mutate(
HINCP = as.numeric(HINCP),
TEN = factor(TEN),
MV = factor(MV)
) %>%
select(
HINCP,
TEN,
MV,
starts_with("WGTP")
) %>%
filter_all(all_vars(!is.na(.)))
pums_hca_2019_1yr <- readRDS("a6_pums_hca.rds")
View(pums_hca_2019_1yr)
temp <- tempfile()
download.file("https://www2.census.gov/programs-surveys/acs/data/pums/2019/1-Year/csv_hca.zip",destfile = temp)
pums_hca_2019_1yr <- read_csv(unzip(temp,"psam_h06.csv"))
unlink(temp)
View(pums_hca_2019_1yr)
saveRDS(pums_hca_2019_1yr, "a6_pums_hca.rds")
pums_hca_2019_1yr <- readRDS("a6_pums_hca.rds")
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
data <- pums_hca_2019_1yr %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
mutate(
HINCP = as.numeric(HINCP),
TEN = factor(TEN),
MV = factor(MV)
) %>%
select(
HINCP,
TEN,
MV,
starts_with("WGTP")
) %>%
filter_all(all_vars(!is.na(.)))
View(data)
