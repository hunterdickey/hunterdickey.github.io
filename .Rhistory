) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal <- colorNumeric(
palette = "Oranges",
domain = bay_pums_example$perc_lowinc_elderly_in_home
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_example,
fillColor = ~pums_pal(perc_lowinc_elderly_in_home),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_lowinc_elderly_in_home),
"% Households with elderly residents making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_example,
pal = pums_pal,
values = ~perc_lowinc_elderly_in_home,
title = "% Households<br>with elderly residents<br>making less than $100K"
)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
lowinc_elderly_in_home= ifelse(
(R60 >= 1) &
(R65 >= 1) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_lowinc_elderly_in_home =
sum(lowinc_elderly_in_home, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal <- colorNumeric(
palette = "Oranges",
domain = bay_pums_example$perc_lowinc_elderly_in_home
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_example,
fillColor = ~pums_pal(perc_lowinc_elderly_in_home),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_lowinc_elderly_in_home),
"% Households with elderly residents making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_example,
pal = pums_pal,
values = ~perc_lowinc_elderly_in_home,
title = "% Households<br>with elderly residents<br>making less than $100K"
)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
lowinc_elderly_in_home= ifelse(
(R60 >= 1) &
(R65 >= 1) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_lowinc_elderly_in_home =
sum(lowinc_elderly_in_home, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal <- colorNumeric(
palette = "Oranges",
domain = bay_pums_example$perc_lowinc_elderly_in_home
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_example,
fillColor = ~pums_pal(perc_lowinc_elderly_in_home),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_lowinc_elderly_in_home),
"% Households with elderly residents making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_example,
pal = pums_pal,
values = ~perc_lowinc_elderly_in_home,
title = "% Households<br>with elderly residents<br>making less than $100K"
)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
lowinc_elderly_in_home= ifelse(
(R60 >= 1) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_lowinc_elderly_in_home =
sum(lowinc_elderly_in_home, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal <- colorNumeric(
palette = "Oranges",
domain = bay_pums_example$perc_lowinc_elderly_in_home
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_example,
fillColor = ~pums_pal(perc_lowinc_elderly_in_home),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_lowinc_elderly_in_home),
"% Households with elderly residents making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_example,
pal = pums_pal,
values = ~perc_lowinc_elderly_in_home,
title = "% Households<br>with elderly residents<br>making less than $100K"
)
perc_lowinc_elderly_in_home
View(bay_pums_example)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
lowinc_elderly_in_home = ifelse(
(R60 >= 1) &
(HINCP < 100000),
WGTP,
0
))
sum(bay_pums_example$lowinc_elderly_in_home)
View(bay_pums_example)
Sys.setenv(CENSUS_KEY="d606b444d6d806f3ba91342926b0e6e9356b2501")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN",
"HICOV",
"HINS1",
"HINS2",
"HINS3",
"HINS4",
"HINS5",
"HINS6",
"HINS7",
"PRIVCOV",
"PUBCOV",
"R60",
"R65",
"HUGCL",
"NPP"
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN",
"R60",
"R65",
"HUGCL",
"NPP"
)
)
rm(list=ls())
Sys.setenv(CENSUS_KEY="d606b444d6d806f3ba91342926b0e6e9356b2501")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN",
"R60",
"R65",
"HUGCL",
"NPP"
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"R60",
"R65"
)
)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
```{r}
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(censusapi)
library(tidyverse)
library(tidyverse)
library(tigris)
library(sf)
library(leaflet)
Sys.setenv(CENSUS_KEY="d606b444d6d806f3ba91342926b0e6e9356b2501")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"R60",
"R65"
)
)
dec_population_2020 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
smc_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:081",
vars = "P001001"
) %>%
transmute(
block =
paste0(state,county,tract,block),
pop = P001001
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"R60",
"R65"
)
)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
mapview(fin_bay_ces4_map, zcol= "Asthma")
library(tidyverse)
library(censusapi)
library(sf)
library(mapview)
library(tigris)
library(readxl)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
ces_data_4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
bay_ces_map <- NULL
bay_ces_map <- NULL
for i in length(bay_counties) {
bay_ces4_map <- ces4_map[ces4_map$`California County`== bay_counties[1],]
ces_data_4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
setwd("~/Documents/GitHub")
setwd("~/Documents/GitHub/hunterdickey.github.io")
ces_data_4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
setwd("~/Documents/GitHub/hunterdickey.github.io/calenviroscreen40resultsdatadictionaryf2021")
ces_data_4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
setwd("~/Documents/GitHub/hunterdickey.github.io")
ces_data_4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
ces4_clean <- ces_data_4 %>%
select(!ends_with("Pctl"))
ca_tracts <- tracts("CA")
ca_tracts <- tracts("CA")
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
select(GEOID) %>%
mutate(GEOID = as.numeric(GEOID)),
by = c("Census Tract" = "GEOID")
)
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
transmute(GEOID = as.numeric(GEOID)),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
bay_counties <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_ces_map <- NULL
bay_ces4_map <- ces4_map[ces4_map$`California County`== bay_counties[1],]
View(bay_ces4_map)
for (i in length(bay_counties)) {
bay_ces4_map <- ces4_map[ces4_map$`California County`== bay_counties[i],]
}
View(bay_ces4_map)
bay_ces_map <- NULL
bay_ces_map <- NULL
for (i in length(bay_counties)) {
bay_ces_map <- ces4_map[ces4_map$`California County`== bay_counties[i],]
}
for (i in 9) {
bay_ces_map[i] <- ces4_map[ces4_map$`California County`== bay_counties[i],]
}
bay_ces_map[i] <- NULL
bay_ces_map <- ces4_map[ces4_map$`California County`== bay_counties[i],]
for (i in length(bay_counties)) {
bay_ces_map <- ces4_map[ces4_map$`California County`== bay_counties[i],]
}
bay_ces4_map_a <- ces4_map[ces4_map$`California County`== "Alameda",]
bay_ces4_map_n <- ces4_map[ces4_map$`California County`== "Napa",]
bay_ces4_map_sc <- ces4_map[ces4_map$`California County`== "Santa Clara",]
bay_ces4_map_cc <- ces4_map[ces4_map$`California County`== "Contra Costa",]
bay_ces4_map_sf <- ces4_map[ces4_map$`California County`== "San Francisco",]
bay_ces4_map_s <- ces4_map[ces4_map$`California County`== "Solano",]
bay_ces4_map_m <- ces4_map[ces4_map$`California County`== "Marin",]
bay_ces4_map_sm <- ces4_map[ces4_map$`California County`== "San Mateo",]
bay_ces4_map_s <- ces4_map[ces4_map$`California County`== "Sonoma",]
fin_bay_ces4_map <- rbind(bay_ces4_map_a,bay_ces4_map_n,bay_ces4_map_sc,bay_ces4_map_cc,bay_ces4_map_sf,bay_ces4_map_s,bay_ces4_map_m,bay_ces4_map_sm,bay_ces4_map_s)
mapview(fin_bay_ces4_map, zcol= "Asthma")
mapview(fin_bay_ces4_map, zcol= "Asthma")
mapview(fin_bay_ces4_map, zcol= "Asthma")
mapview(fin_bay_ces4_map, zcol= "PM2.5")
mapview(fin_bay_ces4_map, zcol= "PM2.5")
mapview(fin_bay_ces4_map, zcol= "Asthma")
mapview(fin_bay_ces4_map, zcol= "PM2.5")
# Question 2, need comment
ggplot(
data = fin_bay_ces4_map,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm")
model <- lm(Asthma ~ PM2.5, fin_bay_ces4_map)
model
summary(model)
# Question 4, desc whats wrong and repeat 2-3
plot(density(residuals(model)))
# Rep Q 2
ggplot(
data = fin_bay_ces4_map,
aes(
x = PM2.5,
y = log(Asthma)
)
) +
geom_point() +
geom_smooth(method = "lm")
model_log <- lm(log(Asthma) ~ PM2.5, fin_bay_ces4_map)
summary(model_log)
plot(density(residuals(model_log)))
min(fin_bay_ces4_map$residuals, na.rm=TRUE)
#Question 5: Map Residuals
mapview(fin_bay_ces4_map, zcol= "residuals", na.rm=TRUE)
ggplot(
data = fin_bay_ces4_map,
aes(
x = PM2.5,
y = log(Asthma)
)
) +
geom_point() +
geom_smooth(method = "lm")
plot(density(residuals(model_log)))
#Question 5: Map Residuals
mapview(fin_bay_ces4_map, zcol= "residuals", na.rm=TRUE)
fin_bay_ces4_map$residuals <- fin_bay_ces4_map$Asthma - best_fit_candidate
slope <- 0
yintercept <- mean(fin_bay_ces4_map$Asthma,na.rm=TRUE)
best_fit_candidate <- slope * fin_bay_ces4_map$PM2.5 + yintercept
fin_bay_ces4_map$residuals <- fin_bay_ces4_map$Asthma - best_fit_candidate
sumsq_residuals <- sum(fin_bay_ces4_map$residuals, na.rm= TRUE)
sumsq_residuals
#Question 5: Map Residuals
mapview(fin_bay_ces4_map, zcol= "residuals", na.rm=TRUE)
#Question 5: Map Residuals
mapview(fin_bay_ces4_map, zcol= "residuals", na.rm=TRUE)
View(fin_bay_ces4_map)
View(fin_bay_ces4_map)
View(fin_bay_ces4_map)
min(fin_bay_ces4_map$residuals, na.rm=TRUE)
#Question 5: Map Residuals
mapview(fin_bay_ces4_map, zcol= "residuals", na.rm=TRUE)
