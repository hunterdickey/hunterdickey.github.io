}
plot(vote.storage, money.storage,
xlab = "Avg Percent All Dem Contributions",
ylab = "Avg Dem Vote Percentage", main = "Avg. Vote Vs Avg. Contribution")
## Problem 4
As the average democratic contribution percentage increases, it appears that the average democratic vote percentage in said state also increases relative to the averages of other states. Therefore, there is an overall positive correlation across all state averages in this data.
```{r}
plot(vote.storage, money.storage,
xlab = "Avg Percent All Dem Contributions",
ylab = "Avg Dem Vote Percentage", main = "Avg. Vote Vs Avg. Contribution by State", col = "white")
text(x = vote.storage, y = money.storage, labels = unique(d$state),
cex=0.65, pos=3,col="black")
## Problem 5
Supposing that contribution percentages predict a Democratic win any time the Democratic Contribution percentage is greater than or equal to 50, the group contribution percentage is incorrect in its election prediction roughly 5.66% of the time when the group democratic contribution is above 50% in any given district. Similarly, the individual contribution percentage is incorrect in predicting the outcome of an election roughly 9.52% of the time when democratic contributions are above 50%.
```{r}
group.wrong.extracted <- d[which(d$dem_group_pct >= 50 & d$dem_vote_pct < 50), c("state", "dem_group_pct", "dem_vote_pct")]
nrow(group.wrong.extracted)
nrow(d)
group.incorrect <- (nrow(group.wrong.extracted)/nrow(d)) *100
indiv.wrong.extracted <- d[which(d$dem_indiv_pct >= 50 & d$dem_vote_pct < 50), c("state", "dem_group_pct", "dem_vote_pct")]
nrow(indiv.wrong.extracted)
nrow(d)
indiv.incorrect <- (nrow(indiv.wrong.extracted)/nrow(d)) *100
## Problem 6
Yes, I believe that the data demonstrates a strong correlation between campaign financing/donation and winning elections. The evidenced positive correlation between democratic vote shares and democratic contributions, in both the district-level and state-level plots support this analysis. "Money buys votes" in the sense that election trends in the US show democratic vote percentage increasing alongside increased financial contributions to the Democratic party.
## Problem 7
The slope of the regression line is strong and positive; however, before the 50% contribution mark on the x-axis,the majority of the dat apoints fall above the regression line. Inversely, past the 50% dem contribution x-value, the majority of the data points fall below the regression line with significant negative residuals in the data set/variation of the observed data from the regression model. I interpret this to mean that the regression line underestimates the y/vote value below 50% democratic contribution and overestimates the y-value above the 50% democratic contribution percentage. This may be due to some unknown omitted or confounding variables related to the election data.
```{r}
# Regression
reg <- lm(dem_vote_pct ~ dem_money_pct, data = d)
summary(reg)
plot(d$dem_money_pct, d$dem_vote_pct,
xlab = "Avg Democrat Contributions Percentage",
ylab = "Avg Dem Vote Percentage", main = "Regression: Avg.Dem.Vote Vs Avg.Dem.Contribution")
## Problem 8
The average error(-5.039818e-15) is close to zero, so close that it is essentially zero for all intents and purposes. Residuals are the difference between the original y value and the predicted y-value. The sum of the residuals always adds up to zero and therefore, as "avg error = sum(res)/length(res)", "avg error = 0/length(res)" will always be 0 or be approaching zero as seen in this case.
```{r}
# Prediction #scatterplot
predict(reg)
#compute errors
res <- reg$residuals
#average error
sum(res)
average.error <- (sum(res)/length(res))
#check
mean.residuals <- mean(res)
plot(res, col = "black", cex = .055)
plot(res, col = "black", cex = .055)
par(mfrow=c(9,5), mar=c(1,1,1,1), oma=c(3,3,3,3))
#storage
s <- d$state
storage <- rep(NA, length(s))
#code
this.state <- s[1234]
state_votes <- d$dem_vote_pct[s==this.state]
state_money <- d$dem_money_pct[s==this.state]
reg <- lm(state_votes ~ state_money, data = d)
plot(state_votes, state_money, type="p",
xlab = c(this.state, "Avg Percent All Dem Contributions"),
ylab = c(this.state, "Avg Dem Vote Percentage"), main =
c("Avg. Vote Vs Avg. Contribution for", this.state), yaxt =
'n', xaxt ='n')
abline(reg, col = "yellow", lwd = 2)
plot(state_votes, state_money, type="p",
xlab = c(this.state, "Avg Percent All Dem Contributions"),
ylab = c(this.state, "Avg Dem Vote Percentage"), main =
c("Avg. Vote Vs Avg. Contribution for", this.state), yaxt =
'n', xaxt ='n')
abline(reg, col = "yellow", lwd = 2)
#storage
s <- d$state
storage <- rep(NA, length(s))
#code
this.state <- s[1234]
state_votes <- d$dem_vote_pct[s==this.state]
state_money <- d$dem_money_pct[s==this.state]
reg <- lm(state_votes ~ state_money, data = d)
plot(state_votes, state_money, type="p",
xlab = c(this.state, "Avg Percent All Dem Contributions"),
ylab = c(this.state, "Avg Dem Vote Percentage"), main =
c("Avg. Vote Vs Avg. Contribution for", this.state), yaxt =
'n', xaxt ='n')
plot(state_votes, state_money, type="p",
xlab = c(this.state, "Avg Percent All Dem Contributions"),
ylab = c(this.state, "Avg Dem Vote Percentage"), main =
c("Avg. Vote Vs Avg. Contribution for", this.state), yaxt =
'n', xaxt ='n')
abline(reg, col = "yellow", lwd = 2)
par(mfrow=c(9,5), mar=c(1,1,1,1), oma=c(3,3,3,3))
par(mfrow=c(9,5), mar=c(1,1,1,1), oma=c(3,3,3,3))
for (i in 1:length(s)) {
this.state <- s[i]
state_votes <- d$dem_vote_pct[s==this.state]
state_money <- d$dem_money_pct[s==this.state]
reg <- lm(state_votes ~ state_money, data = d)
plot(state_votes, state_money, type="p",
xlab = c(this.state, "Avg Percent All Dem Contributions"),
ylab = c(this.state, "Avg Dem Vote Percentage"), main =
c("Avg. Vote Vs Avg. Contribution for", this.state), yaxt =
'n', xaxt ='n')
abline(reg, col = "yellow", lwd = 2)
}
ss <- unique(d$state)
ss
for (i in 1:length(ss)) {
for (i in 1:length(s)) {
this.state <- s[i]
state_votes <- d$dem_vote_pct[s==this.state]
state_money <- d$dem_money_pct[s==this.state]
reg <- lm(state_votes ~ state_money, data = d)
plots <- plot(state_votes, state_money,
xlab = c(this.state, "Avg Percent All Dem Contributions"),
ylab = c(this.state, "Avg Dem Vote Percentage"), main =
c("Avg. Vote Vs Avg. Contribution for", this.state), yaxt =
'n', xaxt ='n')
abline(reg, col = "yellow", lwd = 2)
}
}
##Use for loop
par(mfrow=c(9,5), mar=c(1,1,1,1), oma=c(3,3,3,3))
for (i in 1:length(s)) {
this.state <- s[i]
state_mean_votes <- mean(d$dem_vote_pct[s==this.state])
state_mean_money <- mean(d$dem_money_pct[s==this.state])
vote.storage[i] <- state_mean_votes
money.storage[i] <- state_mean_money
plots <- plot(state_mean_votes, state_mean_money,
xlab = c(this.state, "Avg Percent All Dem Contributions"),
ylab = c(this.state, "Avg Dem Vote Percentage"), main =
c("Avg. Vote Vs Avg. Contribution for", this.state), yaxt =
'n', xaxt ='n')
abline(reg, col = "yellow", lwd = 2)
}
setwd("~/Documents/GitHub/hunterdickey.github.io")
knitr::opts_chunk$set(echo = F, message = F, )
library(censusapi)
library(tidyverse)
library(tigris)
library(sf)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
temp <- tempfile()
download.file("https://www2.census.gov/programs-surveys/acs/data/pums/2019/1-Year/csv_hca.zip",destfile = temp)
rm(list=ls())
pums_hca_2019_1yr <- read_csv(unzip(temp,"psam_h06.csv"))
temp <- tempfile()
download.file("https://www2.census.gov/programs-surveys/acs/data/pums/2019/1-Year/csv_hca.zip",destfile = temp)
pums_hca_2019_1yr <- read_csv(unzip(temp,"psam_h06.csv"))
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN"
)
)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
pums_hca_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN"
)
)
Sys.setenv(CENSUS_KEY="d606b444d6d806f3ba91342926b0e6e9356b2501")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN"
)
)
View(pums_hca_2019_1yr)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
pums_hca_2019_1yr %>%
mutate(
PUMA = str_pad(PUMA,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
View(bay_pums)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
nonenglish_renter_lowinc = ifelse(
(HHL != 1) &
(TEN == 3) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_nonenglish_renter_lowinc =
sum(nonenglish_renter_lowinc, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal <- colorNumeric(
palette = "Oranges",
domain = bay_pums_example$perc_nonenglish_renter_lowinc
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_example,
fillColor = ~pums_pal(perc_nonenglish_renter_lowinc),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_nonenglish_renter_lowinc),
"% non-English-speaking renter households making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_example,
pal = pums_pal,
values = ~perc_nonenglish_renter_lowinc,
title = "% non-English-speaking<br>renter households<br>making less than $100K"
)
View(bay_pums_example)
View(pums_hca_2019_1yr)
View(bay_pums_example)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
nonenglish_renter_lowinc = ifelse(
(HHL != 1) &
(TEN == 3) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_nonenglish_renter_lowinc =
sum(nonenglish_renter_lowinc, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
View(bay_pums_example)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
nonenglish_renter_lowinc = ifelse(
(HHL != 1) &
(TEN == 3) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_nonenglish_renter_lowinc =
sum(nonenglish_renter_lowinc, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
View(bay_pums)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN"
)
)
Sys.setenv(CENSUS_KEY="d606b444d6d806f3ba91342926b0e6e9356b2501")
dec_population_2020 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
smc_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:081",
vars = "P001001"
) %>%
transmute(
block =
paste0(state,county,tract,block),
pop = P001001
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN"
)
)
View(pums_2019_1yr)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
pums_hca_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
bay_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
bay_pums_example <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
nonenglish_renter_lowinc = ifelse(
(HHL != 1) &
(TEN == 3) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_nonenglish_renter_lowinc =
sum(nonenglish_renter_lowinc, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal <- colorNumeric(
palette = "Oranges",
domain = bay_pums_example$perc_nonenglish_renter_lowinc
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_example,
fillColor = ~pums_pal(perc_nonenglish_renter_lowinc),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_nonenglish_renter_lowinc),
"% non-English-speaking renter households making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_example,
pal = pums_pal,
values = ~perc_nonenglish_renter_lowinc,
title = "% non-English-speaking<br>renter households<br>making less than $100K"
)
bay_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
